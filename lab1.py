# Обработка экспериментальных данных, ЛР №1 
# Статистическое оценивание числовых характеристик законов распре-
# деления случайных величин
# Быстров М.Д. Вариант №4

import math

def M(data):
    """Математитическое ожидание - среднее арифметическое"""
    s = 0.0
    for v in data:
        s += v
    m = s / len(data)
    return m

def D(data):
    """Дисперсия"""
    m = M(data)
    s = 0.0
    for v in data:
        s += (v - m) ** 2
    d = s / (len(data) - 1)
    return d

def SKO(data):
    """Среднее квадратичное отклонение"""
    return math.sqrt(D(data))

def DSI(data):
    """Двухсигмовый интервал (95% интервал)"""
    m = M(data)
    sko = SKO(data)
    return [m - 2 * sko, m + 2 * sko]




# экспериментальные данные
experimental_data = [0.3, 0.7, 1.3, 2.8, 5.1, 7.6, 4.9, 4.7, 3.2, 1.8, 0.5, 0.2]
# доверительная вероятность
B = 0.95
# Максимальная вероятная погрешность
E_B = 0.14

print(f"Экспериментальные данные - {experimental_data}")

m = M(experimental_data)
print(f"Математическое ожидание - {m}")

I_95 = DSI(experimental_data)
print(f"95% интервал - {I_95}")

clean_data = [v for v in experimental_data if v >= I_95[0] and v <= I_95[1]]
print(f"Очищенные данные - {clean_data}")

m_corrected = M(clean_data)
print(f"Скорректированное математическое ожидание - {m_corrected}")

D_corr = D(clean_data)


# доверительный интервал для мат. ожидания 
# по заданной доверительной вероятности 

# сначала надо найти максимальную вероятную погрешность 
# по заданной доверительной вероятности (формула 23)
sko = SKO(clean_data)
n_sqrt = math.sqrt(len(clean_data))
e = sko / n_sqrt * 1.96 # 1.96 - t-коэфф при д.в. = 0.95 (приложение 4)

# далее посчитать доверительный интервал мат. ожидания
I_M_95 = [m_corrected - e, m_corrected + e] 

print(f"Максимальная вероятная погрешность при заданной довер. вероятности {B} = {e}")
print(f"Доверительный интервал мат. ожидания - {I_M_95}")


# по заданной максимальной вероятной погрешности найти
# доверительную вероятность попадания математического ожидания в 
# интервал, определяемый указанной погрешностью

# ищем значение для подстановки в функцию Лапласа (формула 22)
x = E_B * n_sqrt / sko

# print(x)

# округленное до 2-х знаков после запятой значение X
x = 0.24

# значение функции Лапласа из приложения 2
F_0_3 = 0.0948

# вычисленная доверительная вероятность
B_2 = 2 * F_0_3

I_ = [m_corrected - E_B, m_corrected + E_B]

print(f"Мат ожидание величины находится в интервале {I_} с дов. вероятностью не менее {B_2}")










# todo проверить расчеты



